{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\React\\\\react-practice\\\\src\\\\PixabeyApp\\\\ImageResults.js\";\nimport { Dialog } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList } from 'material-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ImageResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      currentImg: ''\n    };\n\n    this.handleOpen = img => {\n      this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    let imageListContent;\n    const {\n      images\n    } = this.props;\n\n    if (images) {\n      imageListContent = /*#__PURE__*/_jsxDEV(GridList, {\n        cols: 3,\n        children: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [imageListContent, /*#__PURE__*/_jsxDEV(Dialog, {\n        actions: actions,\n        modal: false,\n        open: this.state.open,\n        onRequestClose: this.handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.currentImg,\n          style: {\n            width: '100%'\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/React/react-practice/src/PixabeyApp/ImageResults.js"],"names":["Dialog","React","Component","PropTypes","GridList","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","render","imageListContent","images","props","actions","width","propTypes","array","isRequired"],"mappings":";AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDI,KADgD,GACxC;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,UAAU,EAAC;AAFP,KADwC;;AAAA,SAKhDC,UALgD,GAKnCC,GAAG,IAAI;AAChB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAC,IAAN;AAAWC,QAAAA,UAAU,EAACE;AAAtB,OAAd;AACH,KAP+C;;AAAA,SAQhDE,WARgD,GAQlC,MAAI;AACd,WAAKD,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAC;AAAN,OAAd;AACH,KAV+C;AAAA;;AAYhDM,EAAAA,MAAM,GAAG;AACL,QAAIC,gBAAJ;AACA,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKC,KAAtB;;AAEA,QAAGD,MAAH,EAAU;AACND,MAAAA,gBAAgB,gBACZ,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAA,kBACKC;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AACD,wBACI;AAAA,iBACKD,gBADL,eAEI,QAAC,MAAD;AACA,QAAA,OAAO,EAAEG,OADT;AAEA,QAAA,KAAK,EAAE,KAFP;AAGA,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,IAHjB;AAIA,QAAA,cAAc,EAAE,KAAKK,WAJrB;AAAA,+BAKI;AAAK,UAAA,GAAG,EAAE,KAAKN,KAAL,CAAWE,UAArB;AAAiC,UAAA,KAAK,EAAE;AAACU,YAAAA,KAAK,EAAC;AAAP,WAAxC;AAAwD,UAAA,GAAG,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAnC+C;AAsCpDb,YAAY,CAACc,SAAb,GAAyB;AACrBJ,EAAAA,MAAM,EAACZ,SAAS,CAACiB,KAAV,CAAgBC;AADF,CAAzB","sourcesContent":["import { Dialog } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GridList } from 'material-ui';\r\n\r\nexport default class ImageResults extends Component {\r\n    state = {\r\n        open :false,\r\n        currentImg:''\r\n    };\r\n    handleOpen = img => {\r\n        this.setState({open:true,currentImg:img});\r\n    };\r\n    handleClose = ()=>{\r\n        this.setState({open:false})\r\n    }\r\n\r\n    render() {\r\n        let imageListContent;\r\n        const {images} = this.props;\r\n\r\n        if(images){\r\n            imageListContent = (\r\n                <GridList cols={3}>\r\n                    {images}\r\n                </GridList>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {imageListContent}\r\n                <Dialog \r\n                actions={actions}\r\n                modal={false}\r\n                open={this.state.open}\r\n                onRequestClose={this.handleClose}>\r\n                    <img src={this.state.currentImg} style={{width:'100%'}} alt=\"\"/>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nImageResults.propTypes = {\r\n    images:PropTypes.array.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}